import { IndexedDBConfig } from "./interfaces";
export declare function validateBeforeTransaction(db: any, storeName: string, reject: Function): void;
export declare function createTransaction(db: IDBDatabase, dbMode: IDBTransactionMode, currentStore: string, resolve: any, reject?: any, abort?: any): IDBTransaction;
export declare function getConnection(config: IndexedDBConfig): Promise<IDBDatabase>;
export declare function getActions<T>(currentStore: any, config: any): {
    getByID(id: string | number): Promise<T>;
    getOneByIndex(keyPath: string, value: string | number): Promise<T>;
    getManyByIndex(keyPath: string, value: string | number): Promise<T[]>;
    getAll(): Promise<T[]>;
    add(value: T, key?: any): Promise<number>;
    update(value: T, key?: any): Promise<any>;
    deleteByID(id: any): Promise<any>;
    deleteAll(): Promise<any>;
    openCursor(cursorCallback: any, keyRange?: IDBKeyRange): Promise<void | IDBCursorWithValue>;
};
