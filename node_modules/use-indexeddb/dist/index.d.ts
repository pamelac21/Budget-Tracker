import React from "react";
import { getActions } from "./db";
import { IndexedDBConfig } from "./interfaces";
interface UseIndexedDBProps {
    config: IndexedDBConfig;
    children?: any;
    loading?: any;
    actions?: typeof getActions;
}
declare const IndexedDBProvider: (props: UseIndexedDBProps) => any;
export declare function useIndexedDBStore<T>(storeName: string): {
    getByID(id: React.ReactText): Promise<T>;
    getOneByIndex(keyPath: string, value: React.ReactText): Promise<T>;
    getManyByIndex(keyPath: string, value: React.ReactText): Promise<T[]>;
    getAll(): Promise<T[]>;
    add(value: T, key?: any): Promise<number>;
    update(value: T, key?: any): Promise<any>;
    deleteByID(id: any): Promise<any>;
    deleteAll(): Promise<any>;
    openCursor(cursorCallback: any, keyRange?: IDBKeyRange): Promise<void | IDBCursorWithValue>;
};
export default IndexedDBProvider;
